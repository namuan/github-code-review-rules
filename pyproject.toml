[project]
name = "github-pr-rules-analyzer"
version = "1.0.0"
description = "A system that collects, processes, and analyzes GitHub pull request comments to generate coding rules"
authors = [{ name = "Development Team", email = "dev@example.com" }]
readme = "README.md"
keywords = ['github', 'pull-requests', 'code-analysis', 'llm', 'rules']
requires-python = ">=3.11,<4.0"
classifiers = [
    "Intended Audience :: Developers",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Quality Assurance",
]
dependencies = [
    "fastapi",
    "uvicorn[standard]",
    "sqlalchemy",
    "requests",
    "python-dotenv",
    "pydantic",
    "openai",
    "jinja2",
    "aiofiles",
    "pydantic-settings>=2.10.1",
]

[tool.uv]
dev-dependencies = [
    "pytest",
    "pytest-asyncio",
    "httpx",
    "pre-commit",
    "tox-uv",
    "ruff",
    "pyinstaller",
    "pytest-mock",
    "coverage",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project.scripts]
github-pr-rules-analyzer = "github_pr_rules_analyzer.main:main"

[project.urls]
Homepage = "https://github.com/yourusername/github-pr-rules-analyzer"
Repository = "https://github.com/yourusername/github-pr-rules-analyzer"
Documentation = "https://github.com/yourusername/github-pr-rules-analyzer"

[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.ruff]
target-version = "py311"
line-length = 120
fix = true

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    # LineTooLong
    "E501",
    # DoNotAssignLambda
    "E731",
    "PLR",
    "TRY300",
    "TRY301",
    "TRY002",
    "D103",
    "D104",
    # Function call in argument defaults (B008) - necessary for FastAPI Depends
    "B008",
    # Complexity issues (C901) - these are code quality guidelines
    "C901",
    # Missing type annotations for function arguments (ANN001) - we've added what's needed
    "ANN001",
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101", "SLF001", "ANN001", "S105"]

[tool.ruff.format]
preview = true
